<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.action</groupId>
        <artifactId>platform</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>action-system</artifactId>
    <packaging>jar</packaging>

    <name>action-system</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- Spring依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- 服务依赖 -->
        <dependency>
            <groupId>com.action</groupId>
            <artifactId>action-common</artifactId>
        </dependency>

        <dependency>
            <groupId>com.action</groupId>
            <artifactId>action-call</artifactId>
        </dependency>

        <!-- common依赖 -->
        <dependency>
            <groupId>com.action</groupId>
            <artifactId>action-common-security</artifactId>
        </dependency>

        <dependency>
            <groupId>com.action</groupId>
            <artifactId>action-common-biz</artifactId>
        </dependency>

        <dependency>
            <groupId>com.action</groupId>
            <artifactId>action-common-file</artifactId>
        </dependency>

        <dependency>
            <groupId>com.action</groupId>
            <artifactId>action-common-mybatisplus-extend</artifactId>
        </dependency>

        <dependency>
            <groupId>com.action</groupId>
            <artifactId>action-common-media</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!-- 第三方依赖 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
        </dependency>

        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.mybatis</groupId>
                    <artifactId>mybatis-spring</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <!-- <build>
         <plugins>
             <plugin>
                 <groupId>org.springframework.boot</groupId>
                 <artifactId>spring-boot-maven-plugin</artifactId>
             </plugin>
             <plugin>&lt;!&ndash;制作docker镜像的maven插件&ndash;&gt;
                 <groupId>com.spotify</groupId>
                 <artifactId>docker-maven-plugin</artifactId>
                 <version>1.2.2</version>
                 <executions>
                     <execution>
                         <id>build-image</id>
                         <phase>package</phase>
                         <goals>
                             <goal>build</goal>
                         </goals>
                     </execution>
                 </executions>
                 <configuration>
                     <imageName>${project.artifactId}</imageName>&lt;!&ndash;镜像名,注意:这里的镜像名一定要小写，如果你的应用名字是大写会报错的&ndash;&gt;
                     <imageTags>
                         <imageTag>latest</imageTag>
                     </imageTags>
                     <dockerDirectory>${project.basedir}</dockerDirectory>&lt;!&ndash;Dockerfile所在的目录&ndash;&gt;
                     <dockerHost>http://192.168.1.42:2375</dockerHost>&lt;!&ndash;docker所在的宿主机地址,或者填写http://yourip:2375&ndash;&gt;
                     <resources>
                         <resource>&lt;!&ndash;这里配置的就是打包后jar所在的位置&ndash;&gt;
                             <targetPath>/</targetPath>
                             <directory>${project.build.directory}</directory>&lt;!&ndash;构建的class文件路径 一般是target&ndash;&gt;
                             <include>${project.build.finalName}-${project.version}.jar</include>
                         </resource>
                     </resources>
                 </configuration>
             </plugin>
         </plugins>
     </build>-->

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
